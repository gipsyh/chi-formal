#lang ivy1.7

type idx_t

relation in_use(I: idx_t)

after init {
    in_use(I) := false;
}

type aa
interpret aa -> nat

individual a: aa

after init {
    a := 0
}

action new(res: idx_t) = {
    assume ~in_use(res);
    in_use(res) := true;
}

export action ttt(res: idx_t) = {
    # require ~in_use(res);
    # in_use(res) := true;
    call new(res);
    a := a + 1;
    assert a < 5;
}

export action delete(res: idx_t) = {
    require in_use(res);
    in_use(res) := false;
}

attribute method = bmc[10]
